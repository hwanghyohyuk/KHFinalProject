<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">

	<!-- resultMap 은 MyBatis의 핵심 기능! - 각 컬럼을 셋해주는 역할을 함 - 필드명과 데이터베이스의 컬럼명을 
		정확하게 기재할 것 -->
	<resultMap id="resultUser" type="user">
		<id property="email" column="EMAIL" />
		<result property="user_no" column="USER_NO" />
		<result property="user_pwd" column="USER_PWD" />
		<result property="user_name" column="USER_NAME" />
		<result property="birthday" column="BIRTHDAY" />
		<result property="gender" column="GENDER" />
		<result property="phone" column="PHONE" />
		<result property="address" column="ADDRESS" />
		<result property="enroll_date" column="ENROLL_DATE" />
		<result property="original_file_name" column="ORIGINAL_FILE_NAME" />
		<result property="stored_file_name" column="STORED_FILE_NAME" />
		<result property="user_state" column="USER_STATE" />
		<result property="job" column="JOB" />
		<result property="cash" column="CASH" />
		<result property="point" column="POINT" />
		<result property="store_no" column="STORE_NO" />
		<result property="store_name" column="STORE_NAME" />
		<result property="brand_no" column="BRAND_NO" />
		<result property="brand_name" column="BRAND_NAME" />
		<result property="session_key" column="SESSION_KEY" />
		<result property="session_limit" column="SESSION_LIMIT" />
	</resultMap>

	<resultMap id="resultCertify" type="emailcertification">
		<id property="email" column="EMAIL" />
		<result property="session_key" column="SESSION_KEY" />
		<result property="certification_no" column="CERTIFICATION_NO" />
	</resultMap>
	
	<resultMap id="resultPassLink" type="passlink">
		<id property="email" column="EMAIL" />
		<result property="key" column="KEY" />
		<result property="end_time" column="END_TIME" />
	</resultMap>	

	<select id="signIn" parameterType="user" resultMap="resultUser">
	<![CDATA[select * from user_view where email=#{email} and user_pwd=#{user_pwd}]]>
	</select>

	<update id="keepSignIn">
		 <![CDATA[update tb_user set session_key = #{sessionId}, session_limit = #{next} where email = #{email}]]>
	</update>

	<select id="checkUserWithSessionKey" resultType="user">
        <![CDATA[select * from user_view where session_key = #{value} and session_limit > sysdate]]>
	</select>

	<select id="mypage" resultMap="resultUser" parameterType="user">
        <![CDATA[
        select * from tb_user where user_no = #{user_no}
        ]]>
	</select>

	<!-- 잔고충전 -->
	<update id="userIncreMoney" parameterType="map">
    	<![CDATA[
    		update tb_user set cash = #{increMoney} + cash
			where user_no = #{user_no}
    	]]>

		<selectKey keyProperty="cash" resultType="int" order="AFTER">
			select
			cash FROM tb_user WHERE user_no = #{user_no}
		</selectKey>

	</update>

	<select id="checkEmail" parameterType="string" resultType="_int">
	<![CDATA[select count(*) from user_view where email=#{email}]]>
	</select>
	
	<select id="checkCertify" parameterType="emailcertification" resultType="_int">
	<![CDATA[
	select count(*) from tb_email_certification where email=#{email} and session_key=#{session_key}
	]]>
	</select>

	<insert id="insertCertify" parameterType="emailcertification">
	<![CDATA[
	insert into tb_email_certification values(#{email},#{session_key},#{certification_no})
	]]>
	</insert>
	
	<update id="updateCertify" parameterType="emailcertification">
	<![CDATA[
	update tb_email_certification set certification_no = #{certification_no} where email=#{email} and session_key=#{session_key}
	]]>
	</update>
	
	<delete id="deleteCertify" parameterType="string">
	<![CDATA[
	delete from tb_email_certification where email=#{email}
	]]>
	</delete>
<!-- 인증번호 확인용 -->
	<select id="certificationCheck" parameterType="emailcertification"	resultType="_int">
	<![CDATA[
	select count(*) from tb_email_certification where email=#{email} and session_key=#{session_key} and certification_no=#{certification_no}
	]]>
	</select>
	
	<insert id="insertUser" parameterType="user">
	<![CDATA[
	insert into tb_user(user_no,email,user_pwd,user_name,birthday,gender,phone,address,job) 
	values(seq_user_no.nextval,#{email},#{user_pwd},#{user_name},#{birthday},#{gender},#{phone},#{address},#{job})
	]]>
	</insert>
	
	<insert id="insertAdmin" parameterType="user">
	<![CDATA[
	insert into tb_user(user_no,email,user_pwd,user_name,birthday,gender,phone,address,job,store_no,brand_no) 
	values(seq_user_no.nextval,#{email},#{user_pwd},#{user_name},#{birthday},#{gender},#{phone},#{address},#{job},#{store_no},#{brand_no})
	]]>
	</insert>
	
	<select id="checkName" parameterType="hashmap" resultType="_int">
	<![CDATA[select count(*) from user_view where email=#{email} and user_name = #{user_name}]]>
	</select>
	
	<select id="checkPhone" parameterType="hashmap" resultType="_int">
	<![CDATA[select count(*) from user_view where email=#{email} and user_name = #{user_name} and phone=#{phone}]]>
	</select>
	
	<insert id="insertKey" parameterType="passlink">
	<![CDATA[insert into tb_passlink values(#{email},#{key},default)]]>
	</insert>
	
	<update id="resetPwd" parameterType="user">
	<![CDATA[
	update tb_user set user_pwd = #{user_pwd} where email=#{email}
	]]>
	</update>
	
	<select id="selectPasslink" parameterType="string" resultType="passlink" resultMap="resultPassLink">
	<![CDATA[	select * from tb_passlink where key=#{key} and sysdate < end_time]]>
	</select>
	
	<delete id="deleteResetKey" parameterType="string">
	<![CDATA[
	delete from tb_passlink where email=#{email}
	]]>
	</delete>
	
	
</mapper>
