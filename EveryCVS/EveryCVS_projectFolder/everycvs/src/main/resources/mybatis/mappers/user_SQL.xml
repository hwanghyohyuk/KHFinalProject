<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">

	<!-- resultMap 은 MyBatis의 핵심 기능! - 각 컬럼을 셋해주는 역할을 함 - 필드명과 데이터베이스의 컬럼명을 
		정확하게 기재할 것 -->
	<resultMap id="resultUser" type="user">
		<id property="email" column="EMAIL" />
		<result property="user_no" column="USER_NO" />
		<result property="user_pwd" column="USER_PWD" />
		<result property="user_name" column="USER_NAME" />
		<result property="birthday" column="BIRTHDAY" />
		<result property="gender" column="GENDER" />
		<result property="phone" column="PHONE" />
		<result property="address" column="ADDRESS" />
		<result property="enroll_date" column="ENROLL_DATE" />
		<result property="original_file_name" column="ORIGINAL_FILE_NAME" />
		<result property="stored_file_name" column="STORED_FILE_NAME" />
		<result property="user_state" column="USER_STATE" />
		<result property="job" column="JOB" />
		<result property="cash" column="CASH" />
		<result property="point" column="POINT" />
		<result property="store_no" column="STORE_NO" />
		<result property="store_name" column="STORE_NAME" />
		<result property="brand_no" column="BRAND_NO" />
		<result property="brand_name" column="BRAND_NAME" />
		<result property="session_key" column="SESSION_KEY" />
		<result property="session_limit" column="SESSION_LIMIT" />
	</resultMap>

	<resultMap id="resultCertify" type="emailcertification">
		<id property="email" column="EMAIL" />
		<result property="session_key" column="SESSION_KEY" />
		<result property="certification_no" column="CERTIFICATION_NO" />
	</resultMap>

	<resultMap id="resultPassLink" type="passlink">
		<id property="email" column="EMAIL" />
		<result property="key" column="KEY" />
		<result property="end_time" column="END_TIME" />
	</resultMap>

	<select id="signIn" parameterType="user" resultMap="resultUser">
	<![CDATA[select * from user_view where email=#{email} and user_pwd=#{user_pwd}]]>
	</select>

	<update id="keepSignIn">
		 <![CDATA[update tb_user set session_key = #{sessionId}, session_limit = #{next} where email = #{email}]]>
	</update>

	<select id="checkUserWithSessionKey" resultType="user">
        <![CDATA[select * from user_view where session_key = #{value} and session_limit > sysdate]]>
	</select>

	<select id="mypage" resultMap="resultUser" parameterType="user">
        <![CDATA[
        select * from tb_user where user_no = #{user_no}
        ]]>
	</select>

	<!-- 잔고충전 -->
	<update id="userIncreMoney" parameterType="map">
    	<![CDATA[
    		update tb_user set cash = #{increMoney} + cash
			where user_no = #{user_no}
    	]]>

		<selectKey keyProperty="cash" resultType="int" order="AFTER">
			select
			cash FROM tb_user WHERE user_no = #{user_no}
		</selectKey>

	</update>

	<select id="checkCertify" parameterType="string" resultType="_int">
	<![CDATA[select count(*) from tb_email_certification where email=#{email}]]>
	</select>

	<select id="checkEmail" parameterType="string" resultType="_int">
	<![CDATA[select count(*) from user_view where email=#{email}]]>
	</select>

	<insert id="insertCertify" parameterType="emailcertification">
	<![CDATA[
	insert into tb_email_certification values(#{email},#{session_key},#{certification_no})
	]]>
	</insert>

	<update id="updateCertify" parameterType="emailcertification">
	<![CDATA[
	update tb_email_certification set certification_no = #{certification_no} where email=#{email} and session_key=#{session_key}
	]]>
	</update>

	<delete id="deleteCertify" parameterType="string">
	<![CDATA[
	delete from tb_email_certification where email=#{email}
	]]>
	</delete>
	<!-- 인증번호 확인용 -->
	<select id="certificationCheck" parameterType="emailcertification"
		resultType="_int">
	<![CDATA[
	select count(*) from tb_email_certification where email=#{email} and session_key=#{session_key} and certification_no=#{certification_no}
	]]>
	</select>

	<insert id="insertUser" parameterType="user">
	<![CDATA[
	insert into tb_user(user_no,email,user_pwd,user_name,birthday,gender,phone,address,job) 
	values(seq_user_no.nextval,#{email},#{user_pwd},#{user_name},#{birthday},#{gender},#{phone},#{address},#{job})
	]]>
	</insert>

	<insert id="insertAdmin" parameterType="user">
	<![CDATA[
	insert into tb_user(user_no,email,user_pwd,user_name,birthday,gender,phone,address,job,store_no,brand_no) 
	values(seq_user_no.nextval,#{email},#{user_pwd},#{user_name},#{birthday},#{gender},#{phone},#{address},#{job},#{store_no},#{brand_no})
	]]>
	</insert>

	<select id="checkName" parameterType="hashmap" resultType="_int">
	<![CDATA[select count(*) from user_view where email=#{email} and user_name = #{user_name}]]>
	</select>

	<select id="checkPhone" parameterType="hashmap" resultType="_int">
	<![CDATA[select count(*) from user_view where email=#{email} and user_name = #{user_name} and phone=#{phone}]]>
	</select>

	<select id="checkPasslink" parameterType="string" resultType="_int">
	<![CDATA[select count(*) from tb_passlink where email=#{email}]]>
	</select>

	<insert id="insertKey" parameterType="passlink">
	<![CDATA[insert into tb_passlink values(#{email},#{key},default)]]>
	</insert>

	<update id="updateKey" parameterType="passlink">
	<![CDATA[
	update tb_passlink set key = #{key}, end_time = default where email=#{email}
	]]>
	</update>

	<update id="resetPwd" parameterType="user">
	<![CDATA[
	update tb_user set user_pwd = #{user_pwd} where email=#{email}
	]]>
	</update>

	<select id="selectPasslink" parameterType="string" resultType="passlink"
		resultMap="resultPassLink">
	<![CDATA[	select * from tb_passlink where key=#{key} and sysdate < end_time]]>
	</select>

	<delete id="deleteResetKey" parameterType="string">
	<![CDATA[
	delete from tb_passlink where email=#{email}
	]]>
	</delete>

	<select id="checkUser" parameterType="user" resultType="_int">
	<![CDATA[select count(*) from user_view where email=#{email} and user_pwd = #{user_pwd}]]>
	</select>

	<update id="modifyUser" parameterType="user">
	<![CDATA[
	update tb_user set 
	user_name = #{user_name},
	birthday = #{birthday},
	phone = #{phone},
	gender = #{gender},
	address = #{address}	
	where email=#{email}
	]]>
	</update>
	<update id="modifyUserpwd" parameterType="user">
 	<![CDATA[
 	update tb_user set 
 	user_name = #{user_name},
 	birthday = #{birthday},
 	phone = #{phone},
 	gender = #{gender},
 	address = #{address},
	user_pwd = #{user_pwd}
 	where email=#{email}
 	]]>
	</update>

	<update id="updateUserImg" parameterType="user">
 	<![CDATA[
 	update tb_user set original_file_name = #{original_file_name}, stored_file_name = #{stored_file_name} where user_no=#{user_no}
 	]]>
	</update>

	<update id="deleteUser" parameterType="string">
	<![CDATA[
	update tb_user set user_state = 1 where email=#{email}
	]]>
	</update>

	<select id="registUserCount" resultType="_int">
	<![CDATA[select count(*) from tb_user where to_char(sysdate,'yy-mm-dd')=to_char(enroll_date,'yy-mm-dd')]]>
	</select>
	
	<select id="userList" resultType="list" resultMap="resultUser">
	<![CDATA[
	select * from user_view where user_no in 
	(select distinct user_no from 
	(select user_no, decode(filter,1,email,2,user_name,3,address,4,to_char(enroll_date,'yy/mm/dd')) as data
	from user_view,(select level as filter from dual connect by level<=4)) 
	]]>
	<choose>
		<when test="jobno == 0"></when>
		<when test="jobno == 1"><![CDATA[where job='customer']]></when>
		<when test="jobno == 2"><![CDATA[where job='storemanager']]></when>
		<when test="jobno == 3"><![CDATA[where job='cvsmanager']]></when>
		<when test="jobno == 4"><![CDATA[where job='sitemanager']]></when>
	</choose>
	<choose>
		<when test="keyword == null"></when>
		<when test="keyword != null"><![CDATA[and LOWER(data) like LOWER(#{keyword})]]></when>
	</choose>
	<![CDATA[ ) and rownum >= #{startRow} and rownum <= #{endRow} ]]>
	<choose>
		<when test="orderby == 0"><![CDATA[order by user_no asc]]></when>
		<when test="orderby == 1"><![CDATA[order by user_no desc]]></when>
		<when test="orderby == 2"><![CDATA[order by user_name asc]]></when>
		<when test="orderby == 3"><![CDATA[order by user_name desc]]></when>
		<when test="orderby == 4"><![CDATA[order by email asc]]></when>
		<when test="orderby == 5"><![CDATA[order by email desc]]></when>
		<when test="orderby == 6"><![CDATA[order by birthday asc]]></when>
		<when test="orderby == 7"><![CDATA[order by birthday desc]]></when>
		<when test="orderby == 8"><![CDATA[order by enroll_date asc]]></when>
		<when test="orderby == 9"><![CDATA[order by enroll_date desc]]></when>
	</choose>
	</select>
	
	<select id="userCount" parameterType="int" resultType="_int">
	<![CDATA[	select count(*) from user_view	]]>
	<choose>
		<when test="jobno == 0"></when>
		<when test="jobno == 1"><![CDATA[where job='customer']]></when>
		<when test="jobno == 2"><![CDATA[where job='storemanager']]></when>
		<when test="jobno == 3"><![CDATA[where job='cvsmanager']]></when>
		<when test="jobno == 4"><![CDATA[where job='sitemanager']]></when>
	</choose>
	</select>
	
</mapper>
